# Default values for smile.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# if there is no externalsecrets, then we need to use the secret.yaml file
# there is smile.secret.yaml.template, so use it to create secret.yaml, then
# kubectl create -f secret.yaml
externalsecrets: "smile-server"

image:
  project: socialmediamacroscope
  pullPolicy: IfNotPresent
  pullSecrets:
    - name: regcred

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: smm.localhost
#  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  # should we add middleare annotations for traefik v2?
  traefik: false

persistence:
  size: 10Gi
  #existingClaim: someclaim

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}


# ----------------------------------------------------------------------
# DEPLOYMENT CONFIGURATION
# ----------------------------------------------------------------------

# ----------------------------------------------------------------------
# Smile Server
# ----------------------------------------------------------------------
smile_server:
  replicas: 1
  image:
    repository: smile_server
    tag: 0.3.0
  service:
    type: ClusterIP
    port: 8001
  app_env: production
  ingress:
    annotations:
  persistence:
    size: 1Gi

# ----------------------------------------------------------------------
# Smile GraphQL
# ----------------------------------------------------------------------
smile_graphql:
  replicas: 1
  image:
    repository: smile_graphql
    tag: 0.1.0
  service:
    type: ClusterIP
    port: 5050
  persistence:

# ----------------------------------------------------------------------
# Smile Algorithm Autophrase
# ----------------------------------------------------------------------
algorithm_autophrase:
  replicas: 1
  image:
    repository: autophrase
    tag: 0.1.5

# ----------------------------------------------------------------------
# Smile Algorithm Classification Predict
# ----------------------------------------------------------------------
algorithm_classification_predict:
  replicas: 1
  image:
    repository: classification_predict
    tag: 0.1.2

# ----------------------------------------------------------------------
# Smile Algorithm Classification Train
# ----------------------------------------------------------------------
algorithm_classification_train:
  replicas: 1
  image:
    repository: classification_train
    tag: 0.1.2

# ----------------------------------------------------------------------
# Smile Algorithm Classification Split
# ----------------------------------------------------------------------
algorithm_classification_split:
  replicas: 1
  image:
    repository: classification_split
    tag: 0.1.2

# ----------------------------------------------------------------------
# Smile Algorithm Histogram
# ----------------------------------------------------------------------
algorithm_histogram:
  replicas: 1
  image:
    repository: histogram
    tag: 0.1.1

# ----------------------------------------------------------------------
# Smile Algorithm Network Analysis
# ----------------------------------------------------------------------
algorithm_network_analysis:
  replicas: 1
  image:
    repository: network_analysis
    tag: 0.1.3

# ----------------------------------------------------------------------
# Smile Algorithm Preprocessing
# ----------------------------------------------------------------------
algorithm_preprocessing:
  replicas: 1
  image:
    repository: preprocessing
    tag: 0.1.3

# ----------------------------------------------------------------------
# Smile Algorithm Sentiment Analysis
# ----------------------------------------------------------------------
algorithm_sentiment_analysis:
  replicas: 1
  image:
    repository: sentiment_analysis
    tag: 0.1.5

# ----------------------------------------------------------------------
# Smile Algorithm Screen Name Prompt
# ----------------------------------------------------------------------
algorithm_screen_name_prompt:
  replicas: 1
  image:
    repository: screen_name_prompt
    tag: 0.1.2

# ----------------------------------------------------------------------
# Smile Algorithm Topic Modeling
# ----------------------------------------------------------------------
algorithm_topic_modeling:
  replicas: 1
  image:
    repository: topic_modeling
    tag: 0.1.3

# ----------------------------------------------------------------------
# Smile Algorithm Name Entity Recognition
# ----------------------------------------------------------------------
algorithm_name_entity_recognition:
  replicas: 1
  image:
    repository: name_entity_recognition
    tag: 0.1.2

# ----------------------------------------------------------------------
# Smile Image Crawler
# ----------------------------------------------------------------------
image_crawler:
  replicas: 1
  image:
    repository: image_crawler
    tag: 0.1.2

# ----------------------------------------------------------------------
# Smile Collect Reddit Comment
# ----------------------------------------------------------------------
collect_reddit_comment:
  replicas: 1
  image:
    repository: collect_reddit_comment
    tag: 0.1.2

# ----------------------------------------------------------------------
# Clowder Create Collection
# ----------------------------------------------------------------------
clowder_create_collection:
  replicas: 1
  image:
    repository: clowder_create_collection
    tag: 0.1.0

# ----------------------------------------------------------------------
# Clowder Create Dataset
# ----------------------------------------------------------------------
clowder_create_dataset:
  replicas: 1
  image:
    repository: clowder_create_dataset
    tag: 0.1.0

# ----------------------------------------------------------------------
# Clowder Create Space
# ----------------------------------------------------------------------
clowder_create_space:
  replicas: 1
  image:
    repository: clowder_create_space
    tag: 0.1.0

# ----------------------------------------------------------------------
# Clowder List
# ----------------------------------------------------------------------
clowder_list:
  replicas: 1
  image:
    repository: clowder_list
    tag: 0.1.0

# ----------------------------------------------------------------------
# Clowder Upload File
# ----------------------------------------------------------------------
clowder_upload_file:
  replicas: 1
  image:
    repository: clowder_upload_file
    tag: 0.1.2


# ----------------------------------------------------------------------
# DEPENDENCIES CONFIGURATION
# ----------------------------------------------------------------------

# ----------------------------------------------------------------------
# RabbitMQ
# ----------------------------------------------------------------------
rabbitmq:
  enabled: true
#  service:
#    portEnabled: true
#    ports.amqp: 5672
#    ports.manager: 15672
  ingress:
    enabled: true
    hostname: smile.localhost
  persistence:
#    existingClaim: rabbitmq-pvc
  auth:
    username: guest
    password: guest


# ----------------------------------------------------------------------
# MinIO
# ----------------------------------------------------------------------
minio:
  enabled: true
  auth:
    existingSecret: "smile-server"
  disableWebUI: false
  defaultBuckets: macroscope-smile
  mode: standalone
  containerPorts:
    api: 9000
    console: 9001
  ingress:
    enabled: true
    hostname: minio.smm.localhost
  apiIngress:
    enabled: true
    hostname: minio-api.smm.localhost
  persistence:
    enabled: true
#    existingClaim: minio-pvc
#    mountPath: /data
    size: 20Gi

# ----------------------------------------------------------------------
# Redis
# ----------------------------------------------------------------------
redis:
  master:
    containerPorts:
      redis: 6379
    persistence:
      enabled: false
  architecture: standalone
  auth:
    enabled: false
